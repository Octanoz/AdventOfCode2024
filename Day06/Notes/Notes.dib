#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

public enum Direction
{
  Up,
  Right,
  Down,
  Left
}

#!csharp

Direction dir = new();

for (int i = 0; i < 10; i++)
{
    Console.WriteLine((Direction)((int)(dir += i) % 4));
}

#!csharp

string[] stringMatrix =
[
"FOIJSDF",
"DFGJIOD",
"DFGJASD",
"OPKJSRT"
];

char[][] matrix = stringMatrix.Select(s => s.ToCharArray()).ToArray();

int currentRow = 1;
int currentCol = 2;
int bottomRow = 3;

var top = matrix.Take(bottomRow).Select(row => row[currentCol]).ToArray();
var bottom = matrix.Skip(currentRow + 1).Select(row => row[currentCol]);
var right = matrix[currentRow][(currentCol + 1)..];
var left = matrix[bottomRow][..currentCol];


top.Display();
bottom.Display();
right.Display();
left.Display();

#!csharp

int[] numbersOriginal = [1,2,3,4];
int[] newNumbers = new int[4];
Array.Copy(numbersOriginal, newNumbers, 4);
int[] anotherNumbers = (int[])numbersOriginal.Clone();
int[] fourthNumbers = numbersOriginal;

newNumbers[1] *= 8;
anotherNumbers[3] -= 2;
numbersOriginal[2] *= 10;

numbersOriginal.Display();
newNumbers.Display();
anotherNumbers.Display();
fourthNumbers.Display();

#!csharp

string[] coordinates =
[
"[1, 4]", "[1, 8]", "[6, 8]", "[6, 4]", "[1, 4]", "[1, 8]", "[6, 8]",
"[6, 4]", "[1, 4]", "[1, 8]", "[6, 8]", "[6, 4]", "[1, 4]", "[1, 8]",
"[6, 8]", "[6, 4]", "[1, 4]", "[1, 8]", "[6, 8]", "[6, 4]"
];

Dictionary<string, int> coordCount = coordinates.GroupBy(x => x).ToDictionary(g => g.Key, g => g.Count());

coordCount.Display();

#!csharp

using System.IO;

string[] lines = File.ReadAllLines(@"..\input.txt");
int obstacles = lines.SelectMany(s => s).Count(c => c == '#');

obstacles.Display();
